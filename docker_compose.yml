version: '3'

services:
  # Kafka 및 Zookeeper
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    networks:
      - incident-response-network
    
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "logs-topic:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - incident-response-network
    depends_on:
      - zookeeper

  # Elasticsearch, Kibana
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - incident-response-network
    
  kibana:
    image: docker.elastic.co/kibana/kibana:7.16.2
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - incident-response-network

  # SOAR 플랫폼 (Shuffle)
  shuffle-frontend:
    image: ghcr.io/shuffle/shuffle-frontend:latest
    ports:
      - "3001:3001"
    environment:
      - BACKEND_HOSTNAME=shuffle-backend
      - BACKEND_PORT=5001
    networks:
      - incident-response-network
    restart: unless-stopped
    depends_on:
      - shuffle-backend

  shuffle-backend:
    image: ghcr.io/shuffle/shuffle-backend:latest
    ports:
      - "5001:5001"
    environment:
      - SHUFFLE_APP_HOTLOAD_FOLDER=./shuffle-apps
      - SHUFFLE_OPENSEARCH_URL=http://elasticsearch:9200
      - SHUFFLE_DEFAULT_USERNAME=admin
      - SHUFFLE_DEFAULT_PASSWORD=password
      - SHUFFLE_DEFAULT_APIKEY=mysecretapikeyfortheshuffle
    volumes:
      - shuffle-data:/app
    networks:
      - incident-response-network
    restart: unless-stopped
    depends_on:
      - elasticsearch

  shuffle-orborus:
    image: ghcr.io/shuffle/shuffle-orborus:latest
    environment:
      - SHUFFLE_BASE_URL=http://shuffle-backend:5001
      - ENVIRONMENT_NAME=Shuffle
      - DOCKER_API_VERSION=1.40
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - incident-response-network
    restart: unless-stopped
    depends_on:
      - shuffle-backend

  # AI 로그 분석 시스템
  ai-log-analyzer:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./logs:/app/logs
      - ./models:/app/models
      - ./config:/app/config
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - ELASTICSEARCH_HOSTS=elasticsearch:9200
      - SHUFFLE_API_URL=http://shuffle-backend:5001/api/v1
      - SHUFFLE_API_KEY=mysecretapikeyfortheshuffle
    networks:
      - incident-response-network
    depends_on:
      - kafka
      - elasticsearch
      - shuffle-backend

networks:
  incident-response-network:
    driver: bridge

volumes:
  elasticsearch-data:
  shuffle-data: